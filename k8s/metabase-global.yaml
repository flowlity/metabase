apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metabase
  # template for the pods
  template:
    metadata:
      labels:
        app: metabase
    spec:
      nodeSelector:
        "agentpool": c2r8
      containers:
        - name: metabase
          image: metabase/metabase:v0.41.5
          env:
            - name: JAVA_OPTS
              value: "-Xmx5g"
            - name: MB_DB_TYPE
              value: postgres
            - name: MB_DB_HOSTd
              value: psql-flexible.postgres.database.azure.com
            - name: MB_DB_USER
              value: postgres
            - name: MB_DB_PASS
              value: 2JoGCygryFmb0fuG
            - name: MB_DB_PORT
              value: "5432"
            - name: MB_DB_DBNAME
              value: metabase
          resources:
            # Pre-allocated
            requests:
              cpu: "1"
              memory: "4Gi"
            # Max resource
            limits:
              cpu: "1.9"
              memory: "7Gi"
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: metabase
  labels:
    app: metabase
spec:
  selector:
    app: metabase
  ports:
    - port: 80
      name: high
      protocol: TCP
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  name: metabase
spec:
  tls:
    - hosts:
        - metabase.flowlity.com
      secretName: metabase-tls-secret
  rules:
    - host: metabase.flowlity.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: metabase
                port:
                  number: 80
